To test this:

drush provision-save @server_master --dns_service_type=bind
drush @server_master provision-zone create foobar.com
drush @server_master provision-zone rr-add foobar.com www A 1.2.3.4

You should end up with a zonefile like:

; Bind zonefile
; File managed by Aegir
; Changes here may be lost by user configurations, tread carefully
$TTL 
@       IN      SOA     foobar.com. hostmaster.foobar.com. ( 2010061700 21600 3600 604800 86400  ) 
www     IN      A       1.2.3.4

this command:

provision-zone create-host www.foobar.com 

should another similar record to the same zonefile.

Caveats:

 1. there's duplicate storage altogether: we could parse zonefiles and
 use that as storage, not PHP files, but that would make switching
 engines more difficult and would require writing parsers for all
 engines.

Todo:

 1. we need slave configuration (ie. modify the slaves configuration
 so that they sync with the master, so just act on create_zone())

 Update: the above code is there, but doesn't work for some reason. When I run
 a zone creation, i end up with:

creating zone configuration on slaves [0.21 sec, 7.39 MB]                                                      [notice]
Undefined variable: results provision.context.inc:362 [0.22 sec, 7.4 MB]                                       [notice]

 Dumping the d($server) structure shows that the slave server doesn't load
 properly: it loads as a provisionService_null object, instead of a DNS object.
