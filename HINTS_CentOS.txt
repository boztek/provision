.. -*- mode: rst; fill-column: 78; -*-
.. This document is formatted using the ReST syntax.

===============================================
Aegir -- CentOS installation instructions hints
===============================================

This is a helper file to the canonical INSTALL.txt. It is aimed at
helping you install Aegir on CentOS. It simply lists commands that
diverge from the base INSTALL.txt in a concise document that will be
easy to maintain in the long term.

It is recommended that the INSTALL.txt document is consulted before
going ahead with this install.

We reuse the same process describe in that document:

 1. Install requirements
 2. Configure system requirements, which include:
    * create a Aegir user
    * configure Apache, MySQL, DNS, etc
 3. Install the Aegir files
 4. Follow the install wizard


1. Install software requirements
================================

You should use the repos "utter ramblings" repos (which feature PHP
5.2) at: http://www.jasonlitka.com/yum-repository/

Shell commands::

 rpm --import http://www.jasonlitka.com/media/RPM-GPG-KEY-jlitka
 cat >> /etc/yum.repos.d/utterramblings.repo <<EOF
[utterramblings]
name=Jason's Utter Ramblings Repo
baseurl=http://www.jasonlitka.com/media/EL\$releasever/\$basearch/
enabled=1
gpgcheck=1
gpgkey=http://www.jasonlitka.com/media/RPM-GPG-KEY-jlitka
EOF
 yum install httpd postfix cvs sudo unzip mysql-server php php-mysql

2. Configure system requirements
================================

Shell commands::
 useradd --home-dir /var/aegir aegir
 gpasswd -a aegir apache
 chmod -R 755 /var/aegir
 # Include the Aegir configs
 ln -s /var/aegir/config/apache.conf /etc/httpd/conf.d/aegir.conf
 service mysqld start
 # Optional: set the mysql root password
 mysqladmin password $password
 mysql -uroot -p

The last two lines can also be (better) accomplished using the
mysql_secure_installation script.

MySQL commands::
 # Replace 'aegir_password' with the chosen password for 'aegir' mysql account
 CREATE DATABASE aegir;
 GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, \
   CREATE TEMPORARY TABLES, LOCK TABLES ON aegir.* TO \
   'aegir'@'localhost' IDENTIFIED BY 'aegir_password';
 # Create a mysql super user (with GRANT OPTION)
 # Replace 'aegir_root_password' with a new password
 GRANT ALL PRIVILEGES ON *.* TO 'aegir_root'@'localhost' \
   IDENTIFIED BY 'aegir_root_password' WITH GRANT OPTION;

You may need to edit your local hosts file to get the aegir domain to work if you 
have not already added a DNS record for this. On OS X:

http://decoding.wordpress.com/2009/04/06/how-to-edit-the-hosts-file-in-mac-os-x-leopard/

The aegir user needs to have sudo access. The wizard will explain how to
do this, but you can already just add the relevant line to your sudoers
file.

/etc/sudoers configuration::
  aegir ALL=NOPASSWD: /usr/sbin/apachectl

3. Install the Aegir files
==========================

There is an install script part of the hostmaster profile that takes care of
installing the right packages and preparing the Drupal frontend install for
you. That script needs to be run as the aegir user created above.  This file
is available alongside this one or can be downloaded through the web at:

http://git.aegirproject.org/?p=provision.git;a=blob_plain;f=install.sh.txt;hb=HEAD

Place it somewhere the aegir user can execute it, i.e in /tmp

Shell commands::
 su aegir -c "sh /tmp/install.sh.txt -w apache"
 service httpd restart


4. Follow the install wizard
============================

You should now be in the installation wizard. The wizard is usually
self-documenting so you should just be able to follow the instructions
in the wizard to configure Aegir to properly use the webserver and
database server.

5. Common issues
================

There are various caveats on running Aegir on CentOS.

You may need to adjust CentOS's firewall settings to allow HTTP
traffic on port 80.  If you installed CentOS with a UI, enable
"Firewall settings -- WWW (HTTP)".

Alternatively, another solution may be to edit /etc/sysconfig/iptables 
and add a rule accepting traffic on the relevant interface on port 80. 

Afterwards, you can restart the firewall with this command:

Shell commands::
 service iptables restart

Also, in some configurations, it seems necessary to restart crond for
the user crontab changes to take effect (very bizarre). For that, use:

Shell commands::
 service crond restart

See http://drupal.org/node/632308 if you have more information about
this issue.

The default sudo configuration in CentOS requires sudo to run in a real
TTY which will make verify and install tasks failed with the message:

 "Web server could not be restarted. Changes might not be available
 until this has been done"

For sudo to behave properly, you should comment out the following line
in your /etc/sudoers file:

Defaults    requiretty
